package com.mariofernandes.javapoc;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.Enumeration;
import java.util.Properties;

public class PropertiesAPIPOC {
    private static final String PROPS_FILE = "application.properties";
    private static final String XML_FILE = "application.xml";

    public void createProperties() {
        System.out.println("--- 1. CREATING PROPERTIES (memory) ---");

        Properties props = new Properties();

        // Add properties using setProperty()
        props.setProperty("app.name", "Properties POC");
        props.setProperty("app.version", "1.0.0");
        props.setProperty("app.author", "Mario Fernandes");
        props.setProperty("database.url", "jdbc:mysql://localhost:3306/mydb");
        props.setProperty("database.username", "admin");
        props.setProperty("database.password", "secret123");

        System.out.println("Created properties:");
        props.forEach((key, value) ->
                System.out.println("  " + key + " = " + value)
        );
        System.out.println();
    }

    public void storeProperties() {
        System.out.println("--- 2. STORING PROPERTIES TO FILE ---");

        Properties props = new Properties();
        props.setProperty("app.name", "Properties POC");
        props.setProperty("app.author", "Mario Fernandes");
        props.setProperty("app.version", "1.0.0");
        props.setProperty("server.port", "8080");
        props.setProperty("server.host", "localhost");

        storeStandard(props);
        storeXML(props);

        System.out.println();
    }

    private void storeStandard(Properties props) {
        System.out.println("--- 2.1 STANDARD .properties FORMAT ---");
        props.setProperty("format", "STANDARD");

        try (FileOutputStream fos = new FileOutputStream(PROPS_FILE)) {
            // Store with comments
            props.store(fos, "Application Configuration - Generated by POC");
            System.out.println("Properties stored successfully to: " + PROPS_FILE);
        } catch (IOException e) {
            System.err.println("Error storing properties: " + e.getMessage());
        }
    }

    private void storeXML(Properties props) {
        System.out.println("--- 2.2 XML FORMAT ---");
        props.setProperty("format", "XML");

        try (FileOutputStream fos = new FileOutputStream(XML_FILE)) {
            // Store with comments and charset
            props.storeToXML(fos, "XML Properties Configuration", StandardCharsets.UTF_8);
            System.out.println("Properties stored as XML to: " + XML_FILE);
        } catch (IOException e) {
            System.err.println("Error storing XML: " + e.getMessage());
        }
    }

    public void readProperties() {
        System.out.println("--- 3. READING PROPERTIES FROM FILE ---");

        readStandard();
        readXML();

        System.out.println();
    }

    private void readStandard() {
        System.out.println("--- 3.1 STANDARD .properties FORMAT ---");
        Properties props = new Properties();

        try (FileInputStream fis = new FileInputStream(PROPS_FILE)) {
            props.load(fis);

            System.out.println("Loaded properties from file:");

            // Method 1: Using getProperty()
            System.out.println("\nUsing getProperty():");
            System.out.println("  app.name = " + props.getProperty("app.name"));
            System.out.println("  app.author = " + props.getProperty("app.author"));
            System.out.println("  app.version = " + props.getProperty("app.version"));

            // Method 2: Using getProperty() with default value
            System.out.println("\nUsing getProperty() with default:");
            System.out.println("  timeout = " + props.getProperty("timeout", "30"));

            // Method 3: Iterating through all properties
            System.out.println("\nAll properties:");
            Enumeration<?> keys = props.propertyNames();
            while (keys.hasMoreElements()) {
                String key = (String) keys.nextElement();
                System.out.println("  " + key + " = " + props.getProperty(key));
            }

        } catch (IOException e) {
            System.err.println("Error reading properties: " + e.getMessage());
        }
    }

    private void readXML() {
        System.out.println("--- 3.2 XML FORMAT ---");
        Properties xmlProps = new Properties();

        try (FileInputStream fis = new FileInputStream(XML_FILE)) {
            xmlProps.loadFromXML(fis);

            System.out.println("Loaded properties from file:");

            // Method 1: Using getProperty()
            System.out.println("\nUsing getProperty():");
            System.out.println("  app.name = " + xmlProps.getProperty("app.name"));
            System.out.println("  app.author = " + xmlProps.getProperty("app.author"));
            System.out.println("  app.version = " + xmlProps.getProperty("app.version"));

            // Method 2: Using getProperty() with default value
            System.out.println("\nUsing getProperty() with default:");
            System.out.println("  timeout = " + xmlProps.getProperty("timeout", "30"));

            // Method 3: Iterating through all properties
            System.out.println("\nAll properties:");
            xmlProps.forEach((key, value) ->
                    System.out.println("  " + key + " = " + value)
            );

        } catch (IOException e) {
            System.err.println("Error reading XML: " + e.getMessage());
        }
    }

    public void workWithSystemProperties() {
        System.out.println("--- 4. SYSTEM PROPERTIES ---");

        // Reading system properties
        System.out.println("Common System Properties:");
        System.out.println("  Java Version: " + System.getProperty("java.version"));
        System.out.println("  Java Home: " + System.getProperty("java.home"));
        System.out.println("  OS Name: " + System.getProperty("os.name"));
        System.out.println("  OS Version: " + System.getProperty("os.version"));
        System.out.println("  User Name: " + System.getProperty("user.name"));
        System.out.println("  User Home: " + System.getProperty("user.home"));
        System.out.println("  User Dir: " + System.getProperty("user.dir"));

        // Setting custom system property
        System.setProperty("custom.property", "custom.value");
        System.out.println("\nCustom System Property:");
        System.out.println("  custom.property = " + System.getProperty("custom.property"));

        // Using Properties object with System properties
        System.out.println("\nLoading all system properties into Properties object:");
        Properties sysProps = System.getProperties();
        System.out.println("  Total system properties: " + sysProps.size());

        System.out.println();
    }
}
